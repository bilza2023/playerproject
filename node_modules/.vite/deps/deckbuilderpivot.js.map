{
  "version": 3,
  "sources": ["../../deckbuilderpivot/Slides.js", "../../deckbuilderpivot/DeckBuilder.js"],
  "sourcesContent": ["// routes/pivot/deckbuilder/Slides.js\n\nexport class Slides {\n    constructor() {\n      this.slidesArray = [];\n    }\n  \n    quoteSlide(data) {\n      this._add(\"quoteSlide\", data);\n    }\n  \n    cornerWordsSlide(data) {\n      this._add(\"cornerWordsSlide\", data);\n    }\n  \n    titleSlide(data) {\n      this._add(\"titleSlide\", data);\n    }\n  \n    imageSlide(data) {\n      this._add(\"imageSlide\", data);\n    }\n  \n    imageLeftBulletsRight(data) {\n      this._add(\"imageLeftBulletsRight\", data);\n    }\n  \n    imageRightBulletsLeft(data) {\n      this._add(\"imageRightBulletsLeft\", data);\n    }\n  \n    imageWithCaption(data) {\n      this._add(\"imageWithCaption\", data);\n    }\n  \n    imageWithTitle(data) {\n      this._add(\"imageWithTitle\", data);\n    }\n  \n    table(data) {\n      this._add(\"table\", data);\n    }\n  \n    statistic(data) {\n      this._add(\"statistic\", data);\n    }\n  \n    barChart(data) {\n      this._add(\"barChart\", data);\n    }\n  \n    twoColumnText(data) {\n      this._add(\"twoColumnText\", data);\n    }\n  \n    donutChart(data) {\n      this._add(\"donutChart\", data);\n    }\n  \n    _add(type, data) {\n      this.slidesArray.push({ type, data });\n    }\n  \n    [Symbol.iterator]() {\n      return this.slidesArray.values();\n    }\n  \n    toJSON() {\n      return this.slidesArray;\n    }\n  }\n  ", "// routes/pivot/deckbuilder/DeckBuilder.js\n\nimport { Slides } from './Slides.js';\n\nexport class DeckBuilder {\n  constructor() {\n    this.theme = null;\n    this.background = null;\n    this.slides = new Slides();\n    this.s = this.slides;\n  }\n\n  setTheme(themeName) {\n    this.theme = themeName;\n  }\n\n  setBackground(background) {\n    this.background = background;\n  }\n\n  // build() {\n  //   return {\n  //     theme: this.theme,\n  //     background: this.background,\n  //     slides: this.slides.toJSON()\n  //   };\n  // }\n  build() {\n    return this.slides.toJSON();\n  }\n  \n}\n"],
  "mappings": ";;;AAEO,IAAM,SAAN,MAAa;AAAA,EAChB,cAAc;AACZ,SAAK,cAAc,CAAC;AAAA,EACtB;AAAA,EAEA,WAAW,MAAM;AACf,SAAK,KAAK,cAAc,IAAI;AAAA,EAC9B;AAAA,EAEA,iBAAiB,MAAM;AACrB,SAAK,KAAK,oBAAoB,IAAI;AAAA,EACpC;AAAA,EAEA,WAAW,MAAM;AACf,SAAK,KAAK,cAAc,IAAI;AAAA,EAC9B;AAAA,EAEA,WAAW,MAAM;AACf,SAAK,KAAK,cAAc,IAAI;AAAA,EAC9B;AAAA,EAEA,sBAAsB,MAAM;AAC1B,SAAK,KAAK,yBAAyB,IAAI;AAAA,EACzC;AAAA,EAEA,sBAAsB,MAAM;AAC1B,SAAK,KAAK,yBAAyB,IAAI;AAAA,EACzC;AAAA,EAEA,iBAAiB,MAAM;AACrB,SAAK,KAAK,oBAAoB,IAAI;AAAA,EACpC;AAAA,EAEA,eAAe,MAAM;AACnB,SAAK,KAAK,kBAAkB,IAAI;AAAA,EAClC;AAAA,EAEA,MAAM,MAAM;AACV,SAAK,KAAK,SAAS,IAAI;AAAA,EACzB;AAAA,EAEA,UAAU,MAAM;AACd,SAAK,KAAK,aAAa,IAAI;AAAA,EAC7B;AAAA,EAEA,SAAS,MAAM;AACb,SAAK,KAAK,YAAY,IAAI;AAAA,EAC5B;AAAA,EAEA,cAAc,MAAM;AAClB,SAAK,KAAK,iBAAiB,IAAI;AAAA,EACjC;AAAA,EAEA,WAAW,MAAM;AACf,SAAK,KAAK,cAAc,IAAI;AAAA,EAC9B;AAAA,EAEA,KAAK,MAAM,MAAM;AACf,SAAK,YAAY,KAAK,EAAE,MAAM,KAAK,CAAC;AAAA,EACtC;AAAA,EAEA,CAAC,OAAO,QAAQ,IAAI;AAClB,WAAO,KAAK,YAAY,OAAO;AAAA,EACjC;AAAA,EAEA,SAAS;AACP,WAAO,KAAK;AAAA,EACd;AACF;;;AClEK,IAAM,cAAN,MAAkB;AAAA,EACvB,cAAc;AACZ,SAAK,QAAQ;AACb,SAAK,aAAa;AAClB,SAAK,SAAS,IAAI,OAAO;AACzB,SAAK,IAAI,KAAK;AAAA,EAChB;AAAA,EAEA,SAAS,WAAW;AAClB,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,cAAc,YAAY;AACxB,SAAK,aAAa;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,QAAQ;AACN,WAAO,KAAK,OAAO,OAAO;AAAA,EAC5B;AAEF;",
  "names": []
}
